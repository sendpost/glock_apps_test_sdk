---
swagger: "2.0"
info:
  description: "glock apps api for inboxing"
  version: "0.1"
  title: "glockapps"
host: "spamtest.glockapps.com"
basePath: "/api/v1"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /CreateTest:
    post:
      description: "Create a test"
      parameters:
      - name: "apikey"
        in: "query"
        description: "the api key for you"
        required: true
        type: "string"
        x-exportParamName: "Apikey"
      - name: "groups"
        in: "query"
        description: "User groups"
        required: true
        type: "integer"
        x-exportParamName: "Groups"
      - name: "providers"
        in: "query"
        description: "providers for api"
        required: true
        type: "string"
        x-exportParamName: "Providers"
      - name: "v"
        in: "query"
        description: "version"
        required: true
        type: "integer"
        x-exportParamName: "V"
      responses:
        "200":
          description: "All IP details fetch success"
          schema:
            $ref: "#/definitions/models.createtest"
  /GetTestResult:
    get:
      description: "Get test result"
      parameters:
      - name: "apikey"
        in: "query"
        description: "the api key for you"
        required: true
        type: "string"
        x-exportParamName: "Apikey"
      - name: "TestId"
        in: "query"
        description: "the testid for you"
        required: true
        type: "string"
        x-exportParamName: "TestId"
      responses:
        "200":
          description: "All IP details fetch success"
          schema:
            $ref: "#/definitions/models.testresult"
  /GetProviders:
    get:
      description: "Get test result"
      parameters:
      - name: "apikey"
        in: "query"
        description: "the api key for you"
        required: true
        type: "string"
        x-exportParamName: "Apikey"
      - name: "v"
        in: "query"
        description: "version"
        required: true
        type: "integer"
        x-exportParamName: "V"
      responses:
        "200":
          description: "All"
          schema:
            $ref: "#/definitions/models.getprovider"
definitions:
  models.createtest:
    type: "object"
    properties:
      TestID:
        type: "string"
      InsertHeader:
        type: "string"
      InsertInBody:
        type: "string"
      SeedList:
        type: "array"
        items:
          type: "string"
    example:
      TestID: "TestID"
      InsertInBody: "InsertInBody"
      SeedList:
      - "SeedList"
      - "SeedList"
      InsertHeader: "InsertHeader"
  models.testresult:
    type: "object"
    properties:
      TestID:
        type: "string"
      Created:
        type: "string"
      Finished:
        type: "boolean"
      DKIM:
        type: "string"
      SPF:
        type: "string"
      Subject:
        type: "string"
      MailFrom:
        type: "string"
      Inboxes:
        type: "array"
        items:
          $ref: "models.testresult_Inboxes"
      SpamAssassin:
        $ref: "models.testresult_SpamAssassin"
      GoogleApps:
        $ref: "models.testresult_GoogleApps"
      Barracuda:
        $ref: "models.testresult_Barracuda"
      Reason:
        type: "string"
      ReasonExtra:
        type: "string"
      SenderIP:
        type: "string"
      SenderScore:
        type: "string"
      SenderHostName:
        type: "string"
      Helo:
        type: "string"
      ReturnPath:
        type: "string"
      ReverseHelo:
        type: "string"
      ReverseIP:
        type: "string"
      DNSBL:
        $ref: "models.testresult_DNSBL"
      ExternalUserID:
        type: "string"
      Meta:
        type: "string"
      Stats:
        $ref: "models.testresult_Stats"
    example:
      SenderIP: "SenderIP"
      Finished: true
      Inboxes:
      - ISP: "ISP"
        Received: "Received"
        Visible: true
        HeaderID: "HeaderID"
        iType: "iType"
        Delay: "Delay"
      - ISP: "ISP"
        Received: "Received"
        Visible: true
        HeaderID: "HeaderID"
        iType: "iType"
        Delay: "Delay"
      Meta: "Meta"
      Helo: "Helo"
      GoogleApps:
        Finished: true
        Active: true
        Phishy: true
        Spam: true
      SenderScore: "SenderScore"
      SPF: "SPF"
      DKIM: "DKIM"
      SenderHostName: "SenderHostName"
      Subject: "Subject"
      Reason: "Reason"
      Created: "Created"
      SpamAssassin:
        Finished: true
        Active: true
        Score: 0.80082819046101150206595775671303272247314453125
        Headers:
        - Score: 6.02745618307040320615897144307382404804229736328125
          Description: "Description"
          Tag: "Tag"
        - Score: 6.02745618307040320615897144307382404804229736328125
          Description: "Description"
          Tag: "Tag"
      TestID: "TestID"
      ReasonExtra: "ReasonExtra"
      DNSBL:
        ipListed: true
        dnsbl:
        - Status: 5
          txt: "txt"
          Server: "Server"
        - Status: 5
          txt: "txt"
          Server: "Server"
        finished: true
      ReverseHelo: "ReverseHelo"
      MailFrom: "MailFrom"
      ReturnPath: "ReturnPath"
      Stats:
        NotDelivered: 9
        BounceRate: 4.1456080298839363962315474054776132106781005859375
        SpamRate: 2.027123023002321833274663731572218239307403564453125
        InboxRate: 3.61607674925191080461672754609026014804840087890625
        Inbox: 5
        Spam: 7
        Other: 2
      Barracuda:
        Active: true
        Score: 1.46581298050294517310021547018550336360931396484375
        Headers:
        - Score: 6.02745618307040320615897144307382404804229736328125
          Description: "Description"
          Tag: "Tag"
        - Score: 6.02745618307040320615897144307382404804229736328125
          Description: "Description"
          Tag: "Tag"
      ExternalUserID: "ExternalUserID"
      ReverseIP: "ReverseIP"
  models.getprovider:
    type: "object"
    properties:
      Groups:
        type: "array"
        items:
          $ref: "models.getprovider_Groups"
    example:
      Groups:
      - GroupName: "GroupName"
        GroupID: 0
        ISPs:
        - domain: "domain"
          name: "name"
          id: 6
        - domain: "domain"
          name: "name"
          id: 6
      - GroupName: "GroupName"
        GroupID: 0
        ISPs:
        - domain: "domain"
          name: "name"
          id: 6
        - domain: "domain"
          name: "name"
          id: 6
  models.testresult_Inboxes:
    type: "object"
    properties:
      ISP:
        type: "string"
      iType:
        type: "string"
      Received:
        type: "string"
      Visible:
        type: "boolean"
      HeaderID:
        type: "string"
      Delay:
        type: "string"
    example:
      ISP: "ISP"
      Received: "Received"
      Visible: true
      HeaderID: "HeaderID"
      iType: "iType"
      Delay: "Delay"
  models.testresult_SpamAssassin_Headers:
    type: "object"
    properties:
      Score:
        type: "number"
      Tag:
        type: "string"
      Description:
        type: "string"
    example:
      Score: 6.02745618307040320615897144307382404804229736328125
      Description: "Description"
      Tag: "Tag"
  models.testresult_SpamAssassin:
    type: "object"
    properties:
      Active:
        type: "boolean"
      Finished:
        type: "boolean"
      Score:
        type: "number"
      Headers:
        type: "array"
        items:
          $ref: "models.testresult_SpamAssassin_Headers"
    example:
      Finished: true
      Active: true
      Score: 0.80082819046101150206595775671303272247314453125
      Headers:
      - Score: 6.02745618307040320615897144307382404804229736328125
        Description: "Description"
        Tag: "Tag"
      - Score: 6.02745618307040320615897144307382404804229736328125
        Description: "Description"
        Tag: "Tag"
  models.testresult_GoogleApps:
    type: "object"
    properties:
      Active:
        type: "boolean"
      Finished:
        type: "boolean"
      Spam:
        type: "boolean"
      Phishy:
        type: "boolean"
    example:
      Finished: true
      Active: true
      Phishy: true
      Spam: true
  models.testresult_Barracuda:
    type: "object"
    properties:
      Active:
        type: "boolean"
      Score:
        type: "number"
      Headers:
        type: "array"
        items:
          $ref: "models.testresult_SpamAssassin_Headers"
    example:
      Active: true
      Score: 1.46581298050294517310021547018550336360931396484375
      Headers:
      - Score: 6.02745618307040320615897144307382404804229736328125
        Description: "Description"
        Tag: "Tag"
      - Score: 6.02745618307040320615897144307382404804229736328125
        Description: "Description"
        Tag: "Tag"
  models.testresult_DNSBL_dnsbl:
    type: "object"
    properties:
      Server:
        type: "string"
      Status:
        type: "integer"
        format: "int32"
      txt:
        type: "string"
    example:
      Status: 5
      txt: "txt"
      Server: "Server"
  models.testresult_DNSBL:
    type: "object"
    properties:
      finished:
        type: "boolean"
      ipListed:
        type: "boolean"
      dnsbl:
        type: "array"
        items:
          $ref: "models.testresult_DNSBL_dnsbl"
    example:
      ipListed: true
      dnsbl:
      - Status: 5
        txt: "txt"
        Server: "Server"
      - Status: 5
        txt: "txt"
        Server: "Server"
      finished: true
  models.testresult_Stats:
    type: "object"
    properties:
      Inbox:
        type: "integer"
        format: "int32"
      Other:
        type: "integer"
        format: "int32"
      Spam:
        type: "integer"
        format: "int32"
      NotDelivered:
        type: "integer"
        format: "int32"
      InboxRate:
        type: "number"
      SpamRate:
        type: "number"
      BounceRate:
        type: "number"
    example:
      NotDelivered: 9
      BounceRate: 4.1456080298839363962315474054776132106781005859375
      SpamRate: 2.027123023002321833274663731572218239307403564453125
      InboxRate: 3.61607674925191080461672754609026014804840087890625
      Inbox: 5
      Spam: 7
      Other: 2
  models.getprovider_ISPs:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      domain:
        type: "string"
    example:
      domain: "domain"
      name: "name"
      id: 6
  models.getprovider_Groups:
    type: "object"
    properties:
      GroupID:
        type: "integer"
        format: "int32"
      GroupName:
        type: "string"
      ISPs:
        type: "array"
        items:
          $ref: "models.getprovider_ISPs"
    example:
      GroupName: "GroupName"
      GroupID: 0
      ISPs:
      - domain: "domain"
        name: "name"
        id: 6
      - domain: "domain"
        name: "name"
        id: 6
